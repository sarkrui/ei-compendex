name: Excel to CSV and HTML Conversion

on:
  schedule:
    - cron: '0 0 * * *' # Runs once a day at 00:00 UTC
  workflow_dispatch: # Add this line to allow manual triggering 

jobs:
  excel_conversion:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas openpyxl lxml selenium

      - name: Install Chrome
        uses: browser-actions/setup-chrome@latest
        with:
          chrome-version: stable
          
      - name: Run Python script
        run: python main.py

      - name: Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Update CSV and HTML files
          file_pattern: '*.csv,*.html'
          branch: main

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: converted-files
          path: |
            *.csv
            *.html
            
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ github.run_id }}
          release_name: Release ${{ github.run_id }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          for file in *.csv *.html; do
            echo "Uploading $file"
            asset_name="$(date +'%Y-%m-%d')-$file"
            content_type="application/octet-stream"
            if [[ $file == *.html ]]; then
              content_type="text/html"
            fi
            curl \
              --progress-bar \
              --location \
              --request POST \
              --header "Authorization: Bearer $GITHUB_TOKEN" \
              --header "Content-Type: $content_type" \
              --upload-file $file \
              "${{ steps.create_release.outputs.upload_url }}?name=$asset_name"
          done